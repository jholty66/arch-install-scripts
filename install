#!/bin/sh
set -e
source ./custom.sh

ah() { eval "$1=\"\$$1 $2;\""; }
ap() { eval "$1=\"\$$1 $2\""; }

[ "$FS" == "zfs" ] && { FS_DEPS="zfs-dkms"
 ap HOOK_OPTS "zfs"
 KERNEL_PARAMS="dozfs=cache zfs=$FS_ROOT rw"
 ZFS_SERVICES() { systemctl preset zfs-import-cache zfs-import-scan zfs-mount\
  zfs-share zfs-zed zfs.target; }
 ZFS_CACHE() { D=/etc/zfs/
  [ -d $D ] || echo "Could not create $D."; exit 0
  [ -d /mnt$D ] || mkdir /mnt$D
  cp {,/mnt}${D}zpool.cache; }
 ZFS_FSTAB() { sed -i 's/${node}\(\/etc\/fstab\)/\1/' /usr/lib/initcpio/hooks/zfs
  F=/etc/mkinitcpio.conf; cp $F{,.def}
  sed -i 's/^FILES=.*$/FILES="\/etc\/fstab"/' $F; }
 ah RAMDISK_PRE_HOOK ZFS_FSTAB
 ah BOOTSTRAP_POST_HOOK ZFS_CACHE
 ah RAMDISK_POST_HOOK ZFS_SERVICES
 ap PACKSTRAP_PKGS "zfs-dkms linux-headers"; }

bootstrap() { eval $BOOTSTRAP_PRE_HOOK
 pacstrap /mnt/ base base-devel linux linux-firmware man man-db man-pages\
  archlinux-keyring texinfo $PACKSTRAP_PKGS $EDITOR
 cd /mnt/etc/; [ -d fstab ] && cp fstab{,~}; genfstab -U /mnt/ > fstab
 eval $BOOTSTRAP_POST_HOOK; }

timezone() { ln -sf /usr/share/zoneinfo/Region/City /etc/localtime; hwclock --systohc; }

locale() { sed -i "s/#\($LOCALE.*\)/\1/g" /etc/locale.gen; locale-gen
 echo "LANG=$LOCALE" > /etc/locale.conf; echo "KEYMAP=uk" > /etc/vconsole.conf
 echo "$HOSTNAME" > /etc/hostname; }

ramdisk() { F=/etc/mkinitcpio.conf; cp $F{,~}; [ -f $F.def ] || cp $F{,.def}
 eval $RAMDISK_PRE_HOOK
 sed -i "s/^HOOKS=(.*$/HOOKS=(${RAMDISK_OPTS})/" $F
 for H in "$HOOK_OPTS"; do
  grep '^HOOKS=(' $F | grep $H > /dev/null || sed -i "s/\(^HOOKS=(.*\))/\1 ${H})/" $F
 done
 mkinitcpio -P
 eval $RAMDISK_POST_HOOK; }

bootloader() { bootctl --path=/boot install
 echo "title Arch Linux
linux vmlinuz-linux
initrd initramfs-linux.img
options ${KERNEL_PARAMS}" > /boot/loader/entries/arch.conf; }

services() { pacman -S $SERVICES; systemctl enable $SERVICES; }

all(){ bootstrap
 echo 'set -e; source /root/arch-install-scripts/install.sh;t imezone &&locale\
  &&hostname &&ramdisk &&bootloader &&services' | arch-chroot /mnt/ /bin/bash -s; }

HELP='Available options:
help 
bootstrap # Prepare for chroot.
timezone
locale
ramdisk # Install initramfs.
bootloader # Install bootloader.
services # Enable init services.
all # Call all options in this order.'

while true; do
 case "$1" in
  help) echo "$HELP";;
  bootstrap) bootstrap;;
  timezone) timezone;;
  locale) locale;;
  hostname) hostname;;
  ramdisk) ramdisk;;
  bootloader) bootloader;;
  services) services;;
  all) all && exit 1;;
  * ) exit;;
 esac
 shift
done
